<?xml version='1.0' encoding='UTF-8'?>

<bag xmlns:exsl="http://exslt.org/common" xmlns:int="http://www.w3.org/2001/XMLSchema#int" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
 <internal name="%SNBGeneralExplorationViewpointName" description="%SNBGeneralExplorationViewpointDescription" shortName="%SNBGeneralExplorationViewpointShortName">
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>31</int:contentVersion>
 </internal>
 <viewpoint xsl:version="1.0" exsl:keep_exsl_namespace="">
  <pane id="bottomUpPane" placeId="resultsArea"/>
  <pane id="summaryPane" placeId="resultsArea"/>
  <pane id="quickFilterPane" placeId="filterArea"/>
  <pane id="timelinePane" placeId="bottomArea"/>
  <pane id="taskTimelinePane" placeId="resultsArea"/>
  <pane id="topDownPane" placeId="resultsArea"/>
  <pane id="stackPane" placeId="sideArea"/>
  <pane id="pmuEventsBottomUpPane" placeId="resultsArea"/>
  <xsl:variable name="StacksCollected" select="(string($enableStackCollection) != 'false') or (string($enableVTSSCollection) != 'false') or (string($collectSamplesMode) = 'stack') or (string($collectWaitsMode) = 'stack')"/>
  <requiredData>
   <queryRef>/SNBGEMetricsChecker</queryRef>
  </requiredData>
  <displayLayout>
   <tab id="summary">
    <masterPane id="summaryPane"/>
   </tab>
   <xsl:if test="not(exsl:ctx('useCountingMode', 0))">
    <tab id="bottomUp">
     <masterPane id="bottomUpPane"/>
     <paneToShow id="timelinePane"/>
     <paneToShow id="quickFilterPane"/>
     <xsl:if test="$StacksCollected">
      <paneToShow id="stackPane"/>
     </xsl:if>
    </tab>
    <xsl:if test="$StacksCollected">
     <tab id="topDown">
      <masterPane id="topDownPane"/>
      <paneToShow id="timelinePane"/>
      <paneToShow id="quickFilterPane"/>
      <paneToShow id="stackPane"/>
     </tab>
    </xsl:if>
    <tab id="pmuEventsBottomUp">
     <masterPane id="pmuEventsBottomUpPane"/>
     <paneToShow id="timelinePane"/>
     <paneToShow id="quickFilterPane"/>
     <xsl:if test="$StacksCollected">
      <paneToShow id="stackPane"/>
     </xsl:if>
    </tab>
    <tab id="tasks">
     <masterPane id="taskTimelinePane"/>
     <paneToShow id="quickFilterPane"/>
     <xsl:if test="$StacksCollected">
      <paneToShow id="stackPane"/>
     </xsl:if>
    </tab>
   </xsl:if>
   <defaultTab id="summary"/>
  </displayLayout>
  <diveLayout id="srcAsmPane" placeId="resultsArea">
   <xsl:if test="$StacksCollected">
    <paneToShow id="stackPane"/>
   </xsl:if>
  </diveLayout>
 </viewpoint>
 <paneLibrary xsl:version="1.0" exsl:keep_exsl_namespace="">
  <xsl:variable name="quickFilterPane">
   <params id="quickFilterPane" metrics="MyDataColumnsPMUEvents" groupings="/Process/Thread/Module"/>
  </xsl:variable>
  <xsl:variable name="qfilterFileName">
   <xsl:text>config://viewpoint/include/filterbar.xsl?</xsl:text>
   <xsl:for-each select="exsl:node-set($quickFilterPane)//@*">
    <xsl:value-of select="concat(name(), '=', .)"/>
    <xsl:text>&amp;</xsl:text>
   </xsl:for-each>
  </xsl:variable>
  <xsl:copy-of select="document($qfilterFileName)"/>
  <xsl:variable name="stackPane">
   <params layers="PMU/ContextSwitch" metrics="MyDataColumnsPMUEvents"/>
  </xsl:variable>
  <xsl:variable name="stackFileName">
   <xsl:text>config://viewpoint/include/stack.xsl?</xsl:text>
   <xsl:for-each select="exsl:node-set($stackPane)//@*">
    <xsl:value-of select="concat(name(), '=', .)"/>
    <xsl:text>&amp;</xsl:text>
   </xsl:for-each>
  </xsl:variable>
  <xsl:copy-of select="document($stackFileName)"/>
  <xsl:variable name="bottomUpPane">
   <params description="SNBGeneralExplorationBottomUpWindowDescription" errorMessage="ErrorNoDataEBS" groupings="PMUGridRowBy" sorting="MySorting" stateVersion="3"/>
  </xsl:variable>
  <xsl:variable name="bottomUpFileName">
   <xsl:text>config://viewpoint/include/grid.xsl?</xsl:text>
   <xsl:for-each select="exsl:node-set($bottomUpPane)//@*">
    <xsl:value-of select="concat(name(), '=', .)"/>
    <xsl:text>&amp;</xsl:text>
   </xsl:for-each>
  </xsl:variable>
  <xsl:copy-of select="document($bottomUpFileName)"/>
  <xsl:variable name="pmuEventsBottomUpPane">
   <params id="pmuEventsBottomUpPane" displayName="EventCountBottomUpWindow" description="PMUEventsBottomUpWindowDescription" helpKeyword="configs.pmu_events_f1199" errorMessage="ErrorNoDataEBS" groupings="PMUGridRowBy" sorting="MySorting" columns="MyColumnsPMUEvents"/>
  </xsl:variable>
  <xsl:variable name="pmuEventsBottomUpFileName">
   <xsl:text>config://viewpoint/include/grid.xsl?</xsl:text>
   <xsl:for-each select="exsl:node-set($pmuEventsBottomUpPane)//@*">
    <xsl:value-of select="concat(name(), '=', .)"/>
    <xsl:text>&amp;</xsl:text>
   </xsl:for-each>
  </xsl:variable>
  <xsl:copy-of select="document($pmuEventsBottomUpFileName)"/>
  <xsl:variable name="topDownPane">
   <params groupings="TopDownGridRowBy" sorting="MySorting" errorMessage="ErrorNoDataEBS" id="topDownPane" displayName="TopDownTreeWindow" description="PMUEventsTopDownTreeWindowDescription" helpKeyword="configs.interpret_calltree_f1030" queryType="topDown" groupingItems="no"/>
  </xsl:variable>
  <xsl:variable name="topDownFileName">
   <xsl:text>config://viewpoint/include/grid.xsl?</xsl:text>
   <xsl:for-each select="exsl:node-set($topDownPane)//@*">
    <xsl:value-of select="concat(name(), '=', .)"/>
    <xsl:text>&amp;</xsl:text>
   </xsl:for-each>
  </xsl:variable>
  <xsl:copy-of select="document($topDownFileName)"/>
  <xsl:variable name="summaryPane">
   <params description="SNBGeneralExplorationSummaryWindowDescription" resultSummaryColumns="GEMetricsSummary" helpKeyWord="configs.summary_gen_exp_f1246" showCPUUsage="true" showUtube="true" highlightColumnsWithExpansion="false"/>
  </xsl:variable>
  <xsl:variable name="summaryFileName">
   <xsl:text>config://viewpoint/include/summary.xsl?</xsl:text>
   <xsl:for-each select="exsl:node-set($summaryPane)//@*">
    <xsl:value-of select="concat(name(), '=', .)"/>
    <xsl:text>&amp;</xsl:text>
   </xsl:for-each>
  </xsl:variable>
  <xsl:copy-of select="document($summaryFileName)"/>
  <xsl:variable name="timelinePane">
   <params id="timelinePane" displayName="TimelineWindow" description="SNBGeneralExplorationTimelineWindowDescription" globalEventAreaName="RefTime" cpuDataQuery="RefTime" cpuDataByThreadQuery="RefTimeByThread" helpKeyword="configs.timeline_f1106"/>
  </xsl:variable>
  <xsl:variable name="timelinePaneFileName">
   <xsl:text>config://viewpoint/include/timeline.xsl?</xsl:text>
   <xsl:for-each select="exsl:node-set($timelinePane)//@*">
    <xsl:value-of select="concat(name(), '=', .)"/>
    <xsl:text>&amp;</xsl:text>
   </xsl:for-each>
  </xsl:variable>
  <xsl:copy-of select="document($timelinePaneFileName)"/>
  <xsl:variable name="taskTimelinePane">
   <params id="taskTimelinePane" displayName="TaskTimelineWithData" description="TaskTimelineWithDataDescription" tasksAndFrames="true" globalEventAreaName="RefTime" headerMode="rich" cpuDataQuery="RefTime" cpuDataByThreadQuery="RefTimeByThread" contextSwitches="true" helpKeyword="configs.tasks_f1330" frameMode="frameDetailed"/>
  </xsl:variable>
  <xsl:variable name="taskTimelinePaneFileName">
   <xsl:text>config://viewpoint/include/timeline.xsl?</xsl:text>
   <xsl:for-each select="exsl:node-set($taskTimelinePane)//@*">
    <xsl:value-of select="concat(name(), '=', .)"/>
    <xsl:text>&amp;</xsl:text>
   </xsl:for-each>
  </xsl:variable>
  <xsl:copy-of select="document($taskTimelinePaneFileName)"/>
  <srcAsm id="srcAsmPane" int:stateVersion="3">
   <asmWindow>
    <helpKeywordF1>configs.find_problem_asm_pane_f1041</helpKeywordF1>
    <gridRules>
     <gridRule>
      <configuration>
       <rowBy>
        <vectorQueryInsert>/PMUAsmPaneRowBy</vectorQueryInsert>
       </rowBy>
       <columnBy>
        <queryRef>/PMUSourceLine</queryRef>
        <queryRef>/PMUAssemblyContent</queryRef>
        <vectorQueryInsert>/MySrcAsmDataColumns</vectorQueryInsert>
       </columnBy>
       <queryMode>flatProfile</queryMode>
      </configuration>
     </gridRule>
    </gridRules>
   </asmWindow>
   <srcWindow>
    <helpKeywordF1>configs.find_problem_src_pane_f1040</helpKeywordF1>
    <gridRules>
     <gridRule>
      <configuration>
       <rowBy>
        <queryRef>/PMUSourceLineFlat</queryRef>
       </rowBy>
       <columnBy>
        <queryRef>/PMUSourceContent</queryRef>
        <vectorQueryInsert>/MySrcAsmDataColumns</vectorQueryInsert>
       </columnBy>
       <queryMode>flatProfile</queryMode>
      </configuration>
     </gridRule>
    </gridRules>
   </srcWindow>
   <fileSearchWindow>
    <helpKeywordF1>configs.find_file_type_f1072</helpKeywordF1>
   </fileSearchWindow>
   <doiBy>
    <queryRef>/DataOfInterest</queryRef>
   </doiBy>
  </srcAsm>
 </paneLibrary>
 <queryLibrary xsl:version="1.0">
  <vectorQuery id="MySrcAsmDataColumns">
   <queryInherit>/GEMetricsLocators</queryInherit>
  </vectorQuery>
  <vectorQuery id="ViewpointGUIandCLIColumns">
   <queryInherit>/GEMetrics</queryInherit>
   <vectorQueryInsert>/CommonDataQueries</vectorQueryInsert>
   <vectorQueryInsert>/RegionDataQueries</vectorQueryInsert>
   <vectorQueryInsert>/GridInfoQueriesTail</vectorQueryInsert>
  </vectorQuery>
  <vectorQuery id="ViewpointGUIandCLISourceViewColumns">
   <queryInherit>/MySrcAsmDataColumns</queryInherit>
  </vectorQuery>
  <vectorQuery id="MySorting">
   <queryRef>/DataOfInterest</queryRef>
  </vectorQuery>
  <countQuery id="DataOfInterest">
   <queryInherit>/Clockticks</queryInherit>
  </countQuery>
  <infoQuery id="PMUEventTimeline" displayName="%PMUEventTimeline">
   <queryInherit>/PMUEventType</queryInherit>
  </infoQuery>
  <vectorQuery id="MyDataColumnsPMUEvents">
   <queryRef>/DerivedClockticks</queryRef>
   <queryRef>/DerivedInstructionsRetired</queryRef>
   <queryRef>/CPI</queryRef>
   <queryRef>/PMUEventCount/PMUEventType</queryRef>
   <queryRef>/QuantumWaitAndInactiveTimeExpanded</queryRef>
   <queryRef>/ContextSwitchCountByReason</queryRef>
  </vectorQuery>
  <vectorQuery id="MyColumnsPMUEvents">
   <vectorQueryInsert>/MyDataColumnsPMUEvents</vectorQueryInsert>
   <vectorQueryInsert>/CommonDataQueries</vectorQueryInsert>
   <vectorQueryInsert>/RegionDataQueries</vectorQueryInsert>
   <vectorQueryInsert>/GridInfoQueriesTail</vectorQueryInsert>
  </vectorQuery>
 </queryLibrary>
</bag>
